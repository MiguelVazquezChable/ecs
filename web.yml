AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy an ECS Fargate service for a web application.

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: "web-app"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: 
        Fn::ImportValue:
          "iam-roles-dev-ECSExecutionRoleArn"
      TaskRoleArn: 
        Fn::ImportValue:
          "iam-roles-dev-ECSTaskRoleArn"
      Cpu: "1024"
      Memory: "3072"
      ContainerDefinitions:
        - Name: "web-container"
          Image: "977685339165.dkr.ecr.us-east-2.amazonaws.com/python:latest"
          PortMappings:
            - ContainerPort: 80
          Secrets:
            - Name: "DATABASE_HOST"
              ValueFrom: "arn:aws:secretsmanager:us-east-2:977685339165:secret:mariadb-secrets-dev-oylFre"
            - Name: "DATABASE_USER"
              ValueFrom: "arn:aws:secretsmanager:us-east-2:977685339165:secret:mariadb-secrets-dev-oylFre"
            - Name: "DATABASE_PASSWORD"
              ValueFrom: "arn:aws:secretsmanager:us-east-2:977685339165:secret:mariadb-secrets-dev-oylFre"
            - Name: "DATABASE_NAME"
              ValueFrom: "arn:aws:secretsmanager:us-east-2:977685339165:secret:mariadb-secrets-dev-oylFre"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/web-app"
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: "ecs"

  ECSFargateService:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerListener
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !ImportValue PrivateSubnet1Id
            - !ImportValue PrivateSubnet2Id
          SecurityGroups:
            - !ImportValue AppSecurityGroupId
      LoadBalancers:
        - ContainerName: "web-container"
          ContainerPort: 80
          TargetGroupArn: !Ref ECSFargateTargetGroup

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !ImportValue PublicSubnet1Id
        - !ImportValue PublicSubnet2Id
      SecurityGroups:
        - !ImportValue LoadBalancerSecurityGroupId
      Scheme: internet-facing

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ECSFargateTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ECSFargateTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue VPCId
      HealthCheckEnabled: true
      HealthCheckPath: "/"
      Matcher:
        HttpCode: "200"

Outputs:
  ECSClusterName:
    Description: "Name of the ECS cluster"
    Value: !Ref ECSCluster

  ECSFargateServiceArn:
    Description: "ARN of the ECS Fargate service"
    Value: !Ref ECSFargateService

  LoadBalancerDNS:
    Description: "DNS name of the load balancer"
    Value: !GetAtt LoadBalancer.DNSName
